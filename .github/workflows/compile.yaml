name: Gulp CI/CD Workflow
on:
  push:
    branches:
      - main
permissions:
  contents: write
  pages: write
  id-token: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
          
      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: 1.4.549
          
      - name: Set up Pandoc
        uses: r-lib/actions/setup-pandoc@v2
          
      - name: Install Dependencies
        run: |
          npm install gulp
          npm install gulp-cli
          npm install @rollup/plugin-babel @rollup/plugin-commonjs @rollup/plugin-node-resolve @rollup/plugin-terser
          npm install gulp-zip gulp-header-comment gulp-eslint gulp-clean-css gulp-connect gulp-autoprefixer
          npm install sass
          npm install through2
          npm install yargs
          npm install glob
          npm install node-qunit-puppeteer
          npm install decktape
          
      - name: Build Project
        run: |
          npx gulp css
          npx gulp js
          npx gulp plugins
          
      - name: Render Markdown and Quarto Files
        run: |
          for file in *.md; do
            if [ -f "$file" ] && [ "$file" != "README.md" ] && [ "$file" != "CONTRIBUTING.md" ] && [ "$file" != "LICENSE.md" ]; then
              echo "Processing $file..."
              if ! quarto render "$file" --to revealjs; then
                echo "Warning: Failed to process $file, skipping..."
                continue
              fi
            fi
          done
          
          for file in *.qmd; do
            if [ -f "$file" ]; then
              echo "Processing $file..."
              if ! quarto render "$file" --to revealjs; then
                echo "Warning: Failed to process $file, skipping..."
                continue
              fi
            fi
          done
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .
          
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  generate-pdfs:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Decktape
        run: npm install -g decktape

      - name: Create output directories
        run: |
          mkdir -p pdfs
          mkdir -p pngs

      - name: Get modified HTML files
        id: changed-files
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD | grep '\.html$' || true)
          echo "files=${CHANGED_FILES}" >> $GITHUB_OUTPUT

      - name: Generate PDFs and Screenshots
        env:
          REPO_NAME: ${{ github.repository }}
        run: |
          # Wait for GitHub Pages to be ready
          sleep 60

          # Read the changed files
          CHANGED_FILES="${{ steps.changed-files.outputs.files }}"
          
          for file in $CHANGED_FILES; do
            if [[ -f "$file" && "$file" == *.html ]]; then
              filename=$(basename "$file" .html)
              url="https://${{ github.repository_owner }}.github.io/${REPO_NAME#*/}/$file"
              
              echo "Processing $url"
              
              # Generate PDF
              decktape reveal "$url" "pdfs/${filename}.pdf"
              
              # Generate screenshots
              mkdir -p "pngs/$filename"
              decktape reveal --screenshots --screenshots-directory "pngs/$filename" "$url" /dev/null
            fi
          done

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add pdfs/ pngs/
          git commit -m "Add generated PDFs and screenshots" || echo "No changes to commit"
          git push
